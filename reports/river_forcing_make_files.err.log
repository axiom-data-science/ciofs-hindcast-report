Traceback (most recent call last):
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/asyncio/base_events.py", line 650, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/contextlib.py", line 222, in __aexit__
    await self.gen.athrow(typ, value, traceback)
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/nbclient/client.py", line 608, in async_setup_kernel
    yield
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
year = 2015
run_year(year)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mRemoteDisconnected[0m                        Traceback (most recent call last)
File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/urllib3/connectionpool.py:703[0m, in [0;36mHTTPConnectionPool.urlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    702[0m [38;5;66;03m# Make the request on the httplib connection object.[39;00m
[0;32m--> 703[0m httplib_response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_make_request[49m[43m([49m
[1;32m    704[0m [43m    [49m[43mconn[49m[43m,[49m
[1;32m    705[0m [43m    [49m[43mmethod[49m[43m,[49m
[1;32m    706[0m [43m    [49m[43murl[49m[43m,[49m
[1;32m    707[0m [43m    [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout_obj[49m[43m,[49m
[1;32m    708[0m [43m    [49m[43mbody[49m[38;5;241;43m=[39;49m[43mbody[49m[43m,[49m
[1;32m    709[0m [43m    [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m,[49m
[1;32m    710[0m [43m    [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[1;32m    711[0m [43m[49m[43m)[49m
[1;32m    713[0m [38;5;66;03m# If we're going to release the connection in ``finally:``, then[39;00m
[1;32m    714[0m [38;5;66;03m# the response doesn't need to know about the connection. Otherwise[39;00m
[1;32m    715[0m [38;5;66;03m# it will also try to release it and we'll have a double-release[39;00m
[1;32m    716[0m [38;5;66;03m# mess.[39;00m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/urllib3/connectionpool.py:449[0m, in [0;36mHTTPConnectionPool._make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    445[0m         [38;5;28;01mexcept[39;00m [38;5;167;01mBaseException[39;00m [38;5;28;01mas[39;00m e:
[1;32m    446[0m             [38;5;66;03m# Remove the TypeError from the exception chain in[39;00m
[1;32m    447[0m             [38;5;66;03m# Python 3 (including for exceptions like SystemExit).[39;00m
[1;32m    448[0m             [38;5;66;03m# Otherwise it looks like a bug in the code.[39;00m
[0;32m--> 449[0m             [43msix[49m[38;5;241;43m.[39;49m[43mraise_from[49m[43m([49m[43me[49m[43m,[49m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m)[49m
[1;32m    450[0m [38;5;28;01mexcept[39;00m (SocketTimeout, BaseSSLError, SocketError) [38;5;28;01mas[39;00m e:

File [0;32m<string>:3[0m, in [0;36mraise_from[0;34m(value, from_value)[0m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/urllib3/connectionpool.py:444[0m, in [0;36mHTTPConnectionPool._make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    443[0m [38;5;28;01mtry[39;00m:
[0;32m--> 444[0m     httplib_response [38;5;241m=[39m [43mconn[49m[38;5;241;43m.[39;49m[43mgetresponse[49m[43m([49m[43m)[49m
[1;32m    445[0m [38;5;28;01mexcept[39;00m [38;5;167;01mBaseException[39;00m [38;5;28;01mas[39;00m e:
[1;32m    446[0m     [38;5;66;03m# Remove the TypeError from the exception chain in[39;00m
[1;32m    447[0m     [38;5;66;03m# Python 3 (including for exceptions like SystemExit).[39;00m
[1;32m    448[0m     [38;5;66;03m# Otherwise it looks like a bug in the code.[39;00m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/http/client.py:1374[0m, in [0;36mHTTPConnection.getresponse[0;34m(self)[0m
[1;32m   1373[0m [38;5;28;01mtry[39;00m:
[0;32m-> 1374[0m     [43mresponse[49m[38;5;241;43m.[39;49m[43mbegin[49m[43m([49m[43m)[49m
[1;32m   1375[0m [38;5;28;01mexcept[39;00m [38;5;167;01mConnectionError[39;00m:

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/http/client.py:318[0m, in [0;36mHTTPResponse.begin[0;34m(self)[0m
[1;32m    317[0m [38;5;28;01mwhile[39;00m [38;5;28;01mTrue[39;00m:
[0;32m--> 318[0m     version, status, reason [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_read_status[49m[43m([49m[43m)[49m
[1;32m    319[0m     [38;5;28;01mif[39;00m status [38;5;241m!=[39m CONTINUE:

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/http/client.py:287[0m, in [0;36mHTTPResponse._read_status[0;34m(self)[0m
[1;32m    284[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m line:
[1;32m    285[0m     [38;5;66;03m# Presumably, the server closed the connection before[39;00m
[1;32m    286[0m     [38;5;66;03m# sending a valid response.[39;00m
[0;32m--> 287[0m     [38;5;28;01mraise[39;00m RemoteDisconnected([38;5;124m"[39m[38;5;124mRemote end closed connection without[39m[38;5;124m"[39m
[1;32m    288[0m                              [38;5;124m"[39m[38;5;124m response[39m[38;5;124m"[39m)
[1;32m    289[0m [38;5;28;01mtry[39;00m:

[0;31mRemoteDisconnected[0m: Remote end closed connection without response

During handling of the above exception, another exception occurred:

[0;31mProtocolError[0m                             Traceback (most recent call last)
File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/requests/adapters.py:489[0m, in [0;36mHTTPAdapter.send[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    488[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m chunked:
[0;32m--> 489[0m     resp [38;5;241m=[39m [43mconn[49m[38;5;241;43m.[39;49m[43murlopen[49m[43m([49m
[1;32m    490[0m [43m        [49m[43mmethod[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mmethod[49m[43m,[49m
[1;32m    491[0m [43m        [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m
[1;32m    492[0m [43m        [49m[43mbody[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mbody[49m[43m,[49m
[1;32m    493[0m [43m        [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mheaders[49m[43m,[49m
[1;32m    494[0m [43m        [49m[43mredirect[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    495[0m [43m        [49m[43massert_same_host[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    496[0m [43m        [49m[43mpreload_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    497[0m [43m        [49m[43mdecode_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    498[0m [43m        [49m[43mretries[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmax_retries[49m[43m,[49m
[1;32m    499[0m [43m        [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout[49m[43m,[49m
[1;32m    500[0m [43m    [49m[43m)[49m
[1;32m    502[0m [38;5;66;03m# Send the request.[39;00m
[1;32m    503[0m [38;5;28;01melse[39;00m:

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/urllib3/connectionpool.py:787[0m, in [0;36mHTTPConnectionPool.urlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    785[0m     e [38;5;241m=[39m ProtocolError([38;5;124m"[39m[38;5;124mConnection aborted.[39m[38;5;124m"[39m, e)
[0;32m--> 787[0m retries [38;5;241m=[39m [43mretries[49m[38;5;241;43m.[39;49m[43mincrement[49m[43m([49m
[1;32m    788[0m [43m    [49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43merror[49m[38;5;241;43m=[39;49m[43me[49m[43m,[49m[43m [49m[43m_pool[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43m_stacktrace[49m[38;5;241;43m=[39;49m[43msys[49m[38;5;241;43m.[39;49m[43mexc_info[49m[43m([49m[43m)[49m[43m[[49m[38;5;241;43m2[39;49m[43m][49m
[1;32m    789[0m [43m[49m[43m)[49m
[1;32m    790[0m retries[38;5;241m.[39msleep()

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/urllib3/util/retry.py:550[0m, in [0;36mRetry.increment[0;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[1;32m    549[0m [38;5;28;01mif[39;00m read [38;5;129;01mis[39;00m [38;5;28;01mFalse[39;00m [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39m_is_method_retryable(method):
[0;32m--> 550[0m     [38;5;28;01mraise[39;00m [43msix[49m[38;5;241;43m.[39;49m[43mreraise[49m[43m([49m[38;5;28;43mtype[39;49m[43m([49m[43merror[49m[43m)[49m[43m,[49m[43m [49m[43merror[49m[43m,[49m[43m [49m[43m_stacktrace[49m[43m)[49m
[1;32m    551[0m [38;5;28;01melif[39;00m read [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/urllib3/packages/six.py:769[0m, in [0;36mreraise[0;34m(tp, value, tb)[0m
[1;32m    768[0m [38;5;28;01mif[39;00m value[38;5;241m.[39m__traceback__ [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m tb:
[0;32m--> 769[0m     [38;5;28;01mraise[39;00m value[38;5;241m.[39mwith_traceback(tb)
[1;32m    770[0m [38;5;28;01mraise[39;00m value

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/urllib3/connectionpool.py:703[0m, in [0;36mHTTPConnectionPool.urlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    702[0m [38;5;66;03m# Make the request on the httplib connection object.[39;00m
[0;32m--> 703[0m httplib_response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_make_request[49m[43m([49m
[1;32m    704[0m [43m    [49m[43mconn[49m[43m,[49m
[1;32m    705[0m [43m    [49m[43mmethod[49m[43m,[49m
[1;32m    706[0m [43m    [49m[43murl[49m[43m,[49m
[1;32m    707[0m [43m    [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout_obj[49m[43m,[49m
[1;32m    708[0m [43m    [49m[43mbody[49m[38;5;241;43m=[39;49m[43mbody[49m[43m,[49m
[1;32m    709[0m [43m    [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m,[49m
[1;32m    710[0m [43m    [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[1;32m    711[0m [43m[49m[43m)[49m
[1;32m    713[0m [38;5;66;03m# If we're going to release the connection in ``finally:``, then[39;00m
[1;32m    714[0m [38;5;66;03m# the response doesn't need to know about the connection. Otherwise[39;00m
[1;32m    715[0m [38;5;66;03m# it will also try to release it and we'll have a double-release[39;00m
[1;32m    716[0m [38;5;66;03m# mess.[39;00m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/urllib3/connectionpool.py:449[0m, in [0;36mHTTPConnectionPool._make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    445[0m         [38;5;28;01mexcept[39;00m [38;5;167;01mBaseException[39;00m [38;5;28;01mas[39;00m e:
[1;32m    446[0m             [38;5;66;03m# Remove the TypeError from the exception chain in[39;00m
[1;32m    447[0m             [38;5;66;03m# Python 3 (including for exceptions like SystemExit).[39;00m
[1;32m    448[0m             [38;5;66;03m# Otherwise it looks like a bug in the code.[39;00m
[0;32m--> 449[0m             [43msix[49m[38;5;241;43m.[39;49m[43mraise_from[49m[43m([49m[43me[49m[43m,[49m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m)[49m
[1;32m    450[0m [38;5;28;01mexcept[39;00m (SocketTimeout, BaseSSLError, SocketError) [38;5;28;01mas[39;00m e:

File [0;32m<string>:3[0m, in [0;36mraise_from[0;34m(value, from_value)[0m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/urllib3/connectionpool.py:444[0m, in [0;36mHTTPConnectionPool._make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    443[0m [38;5;28;01mtry[39;00m:
[0;32m--> 444[0m     httplib_response [38;5;241m=[39m [43mconn[49m[38;5;241;43m.[39;49m[43mgetresponse[49m[43m([49m[43m)[49m
[1;32m    445[0m [38;5;28;01mexcept[39;00m [38;5;167;01mBaseException[39;00m [38;5;28;01mas[39;00m e:
[1;32m    446[0m     [38;5;66;03m# Remove the TypeError from the exception chain in[39;00m
[1;32m    447[0m     [38;5;66;03m# Python 3 (including for exceptions like SystemExit).[39;00m
[1;32m    448[0m     [38;5;66;03m# Otherwise it looks like a bug in the code.[39;00m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/http/client.py:1374[0m, in [0;36mHTTPConnection.getresponse[0;34m(self)[0m
[1;32m   1373[0m [38;5;28;01mtry[39;00m:
[0;32m-> 1374[0m     [43mresponse[49m[38;5;241;43m.[39;49m[43mbegin[49m[43m([49m[43m)[49m
[1;32m   1375[0m [38;5;28;01mexcept[39;00m [38;5;167;01mConnectionError[39;00m:

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/http/client.py:318[0m, in [0;36mHTTPResponse.begin[0;34m(self)[0m
[1;32m    317[0m [38;5;28;01mwhile[39;00m [38;5;28;01mTrue[39;00m:
[0;32m--> 318[0m     version, status, reason [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_read_status[49m[43m([49m[43m)[49m
[1;32m    319[0m     [38;5;28;01mif[39;00m status [38;5;241m!=[39m CONTINUE:

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/http/client.py:287[0m, in [0;36mHTTPResponse._read_status[0;34m(self)[0m
[1;32m    284[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m line:
[1;32m    285[0m     [38;5;66;03m# Presumably, the server closed the connection before[39;00m
[1;32m    286[0m     [38;5;66;03m# sending a valid response.[39;00m
[0;32m--> 287[0m     [38;5;28;01mraise[39;00m RemoteDisconnected([38;5;124m"[39m[38;5;124mRemote end closed connection without[39m[38;5;124m"[39m
[1;32m    288[0m                              [38;5;124m"[39m[38;5;124m response[39m[38;5;124m"[39m)
[1;32m    289[0m [38;5;28;01mtry[39;00m:

[0;31mProtocolError[0m: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))

During handling of the above exception, another exception occurred:

[0;31mConnectionError[0m                           Traceback (most recent call last)
Cell [0;32mIn[38], line 2[0m
[1;32m      1[0m year [38;5;241m=[39m [38;5;241m2015[39m
[0;32m----> 2[0m [43mrun_year[49m[43m([49m[43myear[49m[43m)[49m

Cell [0;32mIn[2], line 15[0m, in [0;36mrun_year[0;34m(year)[0m
[1;32m     12[0m fname [38;5;241m=[39m [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00mbase[38;5;132;01m}[39;00m[38;5;124m/[39m[38;5;132;01m{[39;00mfname[38;5;132;01m}[39;00m[38;5;124m"[39m
[1;32m     14[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m os[38;5;241m.[39mpath[38;5;241m.[39mexists(fname) [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m os[38;5;241m.[39mpath[38;5;241m.[39mexists(fname[38;5;241m.[39mreplace([38;5;124m"[39m[38;5;124m.nc[39m[38;5;124m"[39m,[38;5;124m"[39m[38;5;124m.txt[39m[38;5;124m"[39m)):
[0;32m---> 15[0m     ds [38;5;241m=[39m [43mcreate_river_forcing_file[49m[43m([49m[43mstart[49m[43m,[49m[43m [49m[43mend[49m[43m,[49m[43m [49m[43mndays[49m[38;5;241;43m=[39;49m[38;5;241;43m8[39;49m[43m,[49m[43m [49m[43mskip_last[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m
[1;32m     16[0m     ds[38;5;241m.[39mto_netcdf(fname)
[1;32m     18[0m [38;5;28mprint[39m(Code(fname[38;5;241m.[39mreplace([38;5;124m"[39m[38;5;124m.nc[39m[38;5;124m"[39m,[38;5;124m"[39m[38;5;124m.txt[39m[38;5;124m"[39m)))

File [0;32m~/projects/ciofs-hindcast-report/ciofs-hindcast-report/create_river_roms.py:737[0m, in [0;36mcreate_river_forcing_file[0;34m(start, end, ndays, window, skip_last)[0m
[1;32m    735[0m station_discharge, station_temp [38;5;241m=[39m {}, {}
[1;32m    736[0m [38;5;28;01mfor[39;00m station [38;5;129;01min[39;00m discharge_stations[38;5;241m.[39mvalues():
[0;32m--> 737[0m     station_discharge[station] [38;5;241m=[39m [43mfind_discharge[49m[43m([49m[43mstation[49m[43m,[49m[43m [49m[43mstart[49m[43m,[49m[43m [49m[43mend[49m[43m,[49m[43m [49m[43mndays[49m[43m,[49m[43m [49m[43mwindow[49m[38;5;241;43m=[39;49m[43mwindow[49m[43m)[49m
[1;32m    738[0m [38;5;28;01mfor[39;00m station [38;5;129;01min[39;00m temp_stations[38;5;241m.[39mvalues():
[1;32m    739[0m     station_temp[station] [38;5;241m=[39m find_temp(station, start, end, ndays, window[38;5;241m=[39mwindow)

File [0;32m~/projects/ciofs-hindcast-report/ciofs-hindcast-report/create_river_roms.py:542[0m, in [0;36mfind_discharge[0;34m(station, start, end, ndays, window)[0m
[1;32m    539[0m     [38;5;28;01mraise[39;00m [38;5;167;01mUserWarning[39;00m([38;5;124m"[39m[38;5;124mTime range for file creation is shorter than cutoff for interpolation vs. alternative time series.[39m[38;5;124m"[39m)
[1;32m    541[0m [38;5;66;03m# Read in streamflow data[39;00m
[0;32m--> 542[0m data1 [38;5;241m=[39m [43mreturn_nwis_data[49m[43m([49m[43mstation[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43m00060[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mstart[49m[43m,[49m[43m [49m[43mend[49m[43m)[49m
[1;32m    543[0m logging[38;5;241m.[39minfo([38;5;124m"[39m[38;5;124mAccessed discharge data.[39m[38;5;124m"[39m)
[1;32m    545[0m [38;5;66;03m# if empty try gage data for full time range[39;00m

File [0;32m~/projects/ciofs-hindcast-report/ciofs-hindcast-report/create_river_roms.py:206[0m, in [0;36mreturn_nwis_data[0;34m(station, parameter, start, end)[0m
[1;32m    187[0m [38;5;28;01mdef[39;00m [38;5;21mreturn_nwis_data[39m(station: [38;5;28mstr[39m, parameter: [38;5;28mstr[39m, start: [38;5;28mstr[39m, end: [38;5;28mstr[39m) [38;5;241m-[39m[38;5;241m>[39m pd[38;5;241m.[39mDataFrame:
[1;32m    188[0m [38;5;250m    [39m[38;5;124;03m"""Get the data.[39;00m
[1;32m    189[0m 
[1;32m    190[0m [38;5;124;03m    Parameters[39;00m
[0;32m   (...)[0m
[1;32m    204[0m [38;5;124;03m        DataFrame of data. Includes flags and other info columns.[39;00m
[1;32m    205[0m [38;5;124;03m    """[39;00m
[0;32m--> 206[0m     data [38;5;241m=[39m [43mnwis[49m[38;5;241;43m.[39;49m[43mget_iv[49m[43m([49m[43msites[49m[38;5;241;43m=[39;49m[43mstation[49m[43m,[49m[43m [49m[43mparameterCd[49m[38;5;241;43m=[39;49m[43mparameter[49m[43m,[49m[43m [49m[43mstart[49m[38;5;241;43m=[39;49m[43mstart[49m[43m,[49m[43m [49m[43mend[49m[38;5;241;43m=[39;49m[43mend[49m[43m)[49m[[38;5;241m0[39m]
[1;32m    207[0m     [38;5;28;01mif[39;00m data[38;5;241m.[39mindex[38;5;241m.[39mdtype [38;5;241m==[39m [38;5;124m"[39m[38;5;124mO[39m[38;5;124m"[39m:
[1;32m    208[0m         data[38;5;241m.[39mindex [38;5;241m=[39m pd[38;5;241m.[39mto_datetime(data[38;5;241m.[39mindex, utc[38;5;241m=[39m[38;5;28;01mTrue[39;00m)

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/dataretrieval/nwis.py:430[0m, in [0;36mget_iv[0;34m(start, end, **kwargs)[0m
[1;32m    428[0m start [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m'[39m[38;5;124mstartDT[39m[38;5;124m'[39m, start)
[1;32m    429[0m end [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m'[39m[38;5;124mendDT[39m[38;5;124m'[39m, end)
[0;32m--> 430[0m [38;5;28;01mreturn[39;00m [43m_iv[49m[43m([49m[43mstartDT[49m[38;5;241;43m=[39;49m[43mstart[49m[43m,[49m[43m [49m[43mendDT[49m[38;5;241;43m=[39;49m[43mend[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/dataretrieval/nwis.py:434[0m, in [0;36m_iv[0;34m(**kwargs)[0m
[1;32m    433[0m [38;5;28;01mdef[39;00m [38;5;21m_iv[39m([38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m--> 434[0m     response [38;5;241m=[39m [43mquery_waterservices[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43miv[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mjson[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    435[0m     [38;5;28;01mreturn[39;00m _read_json(response[38;5;241m.[39mjson()), _set_metadata(response, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/dataretrieval/nwis.py:293[0m, in [0;36mquery_waterservices[0;34m(service, **kwargs)[0m
[1;32m    289[0m     kwargs[[38;5;124m'[39m[38;5;124mformat[39m[38;5;124m'[39m] [38;5;241m=[39m [38;5;124m'[39m[38;5;124mrdb[39m[38;5;124m'[39m
[1;32m    291[0m url [38;5;241m=[39m WATERSERVICE_URL [38;5;241m+[39m service
[0;32m--> 293[0m [38;5;28;01mreturn[39;00m [43mquery[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mpayload[49m[38;5;241;43m=[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/dataretrieval/utils.py:142[0m, in [0;36mquery[0;34m(url, payload, delimiter)[0m
[1;32m    137[0m     payload[key] [38;5;241m=[39m to_str(value, delimiter)
[1;32m    138[0m [38;5;66;03m#for index in range(len(payload)):[39;00m
[1;32m    139[0m [38;5;66;03m#    key, value = payload[index][39;00m
[1;32m    140[0m [38;5;66;03m#    payload[index] = (key, to_str(value))[39;00m
[0;32m--> 142[0m response [38;5;241m=[39m [43mrequests[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mparams[49m[38;5;241;43m=[39;49m[43mpayload[49m[43m)[49m
[1;32m    144[0m [38;5;28;01mif[39;00m response[38;5;241m.[39mstatus_code [38;5;241m==[39m [38;5;241m400[39m:
[1;32m    145[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mBad Request, check that your parameters are correct. URL: [39m[38;5;132;01m{}[39;00m[38;5;124m"[39m[38;5;241m.[39mformat(response[38;5;241m.[39murl))

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/requests/api.py:73[0m, in [0;36mget[0;34m(url, params, **kwargs)[0m
[1;32m     62[0m [38;5;28;01mdef[39;00m [38;5;21mget[39m(url, params[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m     63[0m [38;5;250m    [39m[38;5;124mr[39m[38;5;124;03m"""Sends a GET request.[39;00m
[1;32m     64[0m 
[1;32m     65[0m [38;5;124;03m    :param url: URL for the new :class:`Request` object.[39;00m
[0;32m   (...)[0m
[1;32m     70[0m [38;5;124;03m    :rtype: requests.Response[39;00m
[1;32m     71[0m [38;5;124;03m    """[39;00m
[0;32m---> 73[0m     [38;5;28;01mreturn[39;00m [43mrequest[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mget[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43mparams[49m[38;5;241;43m=[39;49m[43mparams[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/requests/api.py:59[0m, in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[1;32m     55[0m [38;5;66;03m# By using the 'with' statement we are sure the session is closed, thus we[39;00m
[1;32m     56[0m [38;5;66;03m# avoid leaving sockets open which can trigger a ResourceWarning in some[39;00m
[1;32m     57[0m [38;5;66;03m# cases, and look like a memory leak in others.[39;00m
[1;32m     58[0m [38;5;28;01mwith[39;00m sessions[38;5;241m.[39mSession() [38;5;28;01mas[39;00m session:
[0;32m---> 59[0m     [38;5;28;01mreturn[39;00m [43msession[49m[38;5;241;43m.[39;49m[43mrequest[49m[43m([49m[43mmethod[49m[38;5;241;43m=[39;49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/requests/sessions.py:587[0m, in [0;36mSession.request[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    582[0m send_kwargs [38;5;241m=[39m {
[1;32m    583[0m     [38;5;124m"[39m[38;5;124mtimeout[39m[38;5;124m"[39m: timeout,
[1;32m    584[0m     [38;5;124m"[39m[38;5;124mallow_redirects[39m[38;5;124m"[39m: allow_redirects,
[1;32m    585[0m }
[1;32m    586[0m send_kwargs[38;5;241m.[39mupdate(settings)
[0;32m--> 587[0m resp [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mprep[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43msend_kwargs[49m[43m)[49m
[1;32m    589[0m [38;5;28;01mreturn[39;00m resp

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/requests/sessions.py:701[0m, in [0;36mSession.send[0;34m(self, request, **kwargs)[0m
[1;32m    698[0m start [38;5;241m=[39m preferred_clock()
[1;32m    700[0m [38;5;66;03m# Send the request[39;00m
[0;32m--> 701[0m r [38;5;241m=[39m [43madapter[49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mrequest[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    703[0m [38;5;66;03m# Total elapsed time of the request (approximately)[39;00m
[1;32m    704[0m elapsed [38;5;241m=[39m preferred_clock() [38;5;241m-[39m start

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/requests/adapters.py:547[0m, in [0;36mHTTPAdapter.send[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    544[0m             [38;5;28;01mraise[39;00m
[1;32m    546[0m [38;5;28;01mexcept[39;00m (ProtocolError, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m err:
[0;32m--> 547[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m(err, request[38;5;241m=[39mrequest)
[1;32m    549[0m [38;5;28;01mexcept[39;00m MaxRetryError [38;5;28;01mas[39;00m e:
[1;32m    550[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(e[38;5;241m.[39mreason, ConnectTimeoutError):
[1;32m    551[0m         [38;5;66;03m# TODO: Remove this in 3.0.0: see #2811[39;00m

[0;31mConnectionError[0m: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))

