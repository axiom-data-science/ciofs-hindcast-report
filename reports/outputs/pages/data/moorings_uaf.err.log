Traceback (most recent call last):
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.10/asyncio/base_events.py", line 641, in run_until_complete
    return future.result()
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
cat['kodiak-burke-o-lator-kodiak-ak'].plot.data()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
File [0;32m~/miniconda3/envs/ciofs/lib/python3.10/site-packages/erddapy/core/interfaces.py:33[0m, in [0;36mto_pandas[0;34m(url, requests_kwargs, pandas_kwargs)[0m
[1;32m     32[0m [38;5;28;01mtry[39;00m:
[0;32m---> 33[0m     [38;5;28;01mreturn[39;00m [43mpd[49m[38;5;241;43m.[39;49m[43mread_csv[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43m([49m[43mpandas_kwargs[49m[43m [49m[38;5;129;43;01mor[39;49;00m[43m [49m[43m{[49m[43m}[49m[43m)[49m[43m)[49m
[1;32m     34[0m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m e:

File [0;32m~/miniconda3/envs/ciofs/lib/python3.10/site-packages/pandas/util/_decorators.py:211[0m, in [0;36mdeprecate_kwarg.<locals>._deprecate_kwarg.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    210[0m         kwargs[new_arg_name] [38;5;241m=[39m new_arg_value
[0;32m--> 211[0m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.10/site-packages/pandas/util/_decorators.py:331[0m, in [0;36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    326[0m     warnings[38;5;241m.[39mwarn(
[1;32m    327[0m         msg[38;5;241m.[39mformat(arguments[38;5;241m=[39m_format_argument_list(allow_args)),
[1;32m    328[0m         [38;5;167;01mFutureWarning[39;00m,
[1;32m    329[0m         stacklevel[38;5;241m=[39mfind_stack_level(),
[1;32m    330[0m     )
[0;32m--> 331[0m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

[0;31mTypeError[0m: read_csv() got an unexpected keyword argument 'requests_kwargs'

The above exception was the direct cause of the following exception:

[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[4], line 1[0m
[0;32m----> 1[0m [43mcat[49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mkodiak-burke-o-lator-kodiak-ak[39;49m[38;5;124;43m'[39;49m[43m][49m[38;5;241;43m.[39;49m[43mplot[49m[38;5;241;43m.[39;49m[43mdata[49m[43m([49m[43m)[49m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.10/site-packages/hvplot/plotting/core.py:92[0m, in [0;36mhvPlotBase.__call__[0;34m(self, x, y, kind, **kwds)[0m
[1;32m     89[0m         plot [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_converter(x, y, kind, [38;5;241m*[39m[38;5;241m*[39mkwds)(kind, x, y)
[1;32m     90[0m         [38;5;28;01mreturn[39;00m pn[38;5;241m.[39mpanel(plot, [38;5;241m*[39m[38;5;241m*[39mpanel_dict)
[0;32m---> 92[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_converter[49m[43m([49m[43mx[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[43mkind[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwds[49m[43m)[49m(kind, x, y)

File [0;32m~/miniconda3/envs/ciofs/lib/python3.10/site-packages/hvplot/plotting/core.py:99[0m, in [0;36mhvPlotBase._get_converter[0;34m(self, x, y, kind, **kwds)[0m
[1;32m     97[0m y [38;5;241m=[39m y [38;5;129;01mor[39;00m params[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124my[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[1;32m     98[0m kind [38;5;241m=[39m kind [38;5;129;01mor[39;00m params[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124mkind[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[0;32m---> 99[0m [38;5;28;01mreturn[39;00m [43mHoloViewsConverter[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_data[49m[43m,[49m[43m [49m[43mx[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[43mkind[49m[38;5;241;43m=[39;49m[43mkind[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mparams[49m[43m)[49m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.10/site-packages/hvplot/converter.py:389[0m, in [0;36mHoloViewsConverter.__init__[0;34m(self, data, x, y, kind, by, use_index, group_label, value_label, backlog, persist, use_dask, crs, fields, groupby, dynamic, grid, legend, rot, title, xlim, ylim, clim, symmetric, logx, logy, loglog, hover, subplots, label, invert, stacked, colorbar, datashade, rasterize, row, col, debug, framewise, aggregator, projection, global_extent, geo, precompute, flip_xaxis, flip_yaxis, dynspread, hover_cols, x_sampling, y_sampling, project, tools, attr_labels, coastline, tiles, sort_date, check_symmetric_max, transforms, stream, cnorm, features, rescale_discrete_levels, **kwds)[0m
[1;32m    387[0m [38;5;28mself[39m[38;5;241m.[39mvalue_label [38;5;241m=[39m value_label
[1;32m    388[0m [38;5;28mself[39m[38;5;241m.[39mlabel [38;5;241m=[39m label
[0;32m--> 389[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_process_data[49m[43m([49m
[1;32m    390[0m [43m    [49m[43mkind[49m[43m,[49m[43m [49m[43mdata[49m[43m,[49m[43m [49m[43mx[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[43mby[49m[43m,[49m[43m [49m[43mgroupby[49m[43m,[49m[43m [49m[43mrow[49m[43m,[49m[43m [49m[43mcol[49m[43m,[49m[43m [49m[43muse_dask[49m[43m,[49m
[1;32m    391[0m [43m    [49m[43mpersist[49m[43m,[49m[43m [49m[43mbacklog[49m[43m,[49m[43m [49m[43mlabel[49m[43m,[49m[43m [49m[43mgroup_label[49m[43m,[49m[43m [49m[43mvalue_label[49m[43m,[49m
[1;32m    392[0m [43m    [49m[43mhover_cols[49m[43m,[49m[43m [49m[43mattr_labels[49m[43m,[49m[43m [49m[43mtransforms[49m[43m,[49m[43m [49m[43mstream[49m[43m,[49m[43m [49m[43mkwds[49m
[1;32m    393[0m [43m[49m[43m)[49m
[1;32m    395[0m [38;5;28mself[39m[38;5;241m.[39mdynamic [38;5;241m=[39m dynamic
[1;32m    396[0m [38;5;28mself[39m[38;5;241m.[39mgeo [38;5;241m=[39m [38;5;28many[39m([geo, crs, global_extent, projection, project, coastline, features])

File [0;32m~/miniconda3/envs/ciofs/lib/python3.10/site-packages/hvplot/converter.py:673[0m, in [0;36mHoloViewsConverter._process_data[0;34m(self, kind, data, x, y, by, groupby, row, col, use_dask, persist, backlog, label, group_label, value_label, hover_cols, attr_labels, transforms, stream, kwds)[0m
[1;32m    671[0m     data [38;5;241m=[39m data[38;5;241m.[39mto_frame()
[1;32m    672[0m [38;5;28;01mif[39;00m is_intake(data):
[0;32m--> 673[0m     data [38;5;241m=[39m [43mprocess_intake[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43muse_dask[49m[43m [49m[38;5;129;43;01mor[39;49;00m[43m [49m[43mpersist[49m[43m)[49m
[1;32m    674[0m [38;5;66;03m# Pandas interface in HoloViews doesn't accept non-string columns.[39;00m
[1;32m    675[0m [38;5;66;03m# The converter stores a reference to the source data to[39;00m
[1;32m    676[0m [38;5;66;03m# update the `_dataset` property (of the hv object its __call__ method[39;00m
[1;32m    677[0m [38;5;66;03m# returns) with a hv Dataset created from the source data, which[39;00m
[1;32m    678[0m [38;5;66;03m# is done for optimizating some operations in HoloViews.[39;00m
[1;32m    679[0m data [38;5;241m=[39m _convert_col_names_to_str(data)

File [0;32m~/miniconda3/envs/ciofs/lib/python3.10/site-packages/hvplot/util.py:361[0m, in [0;36mprocess_intake[0;34m(data, use_dask)[0m
[1;32m    359[0m     data [38;5;241m=[39m data[38;5;241m.[39mto_dask()
[1;32m    360[0m [38;5;28;01melse[39;00m:
[0;32m--> 361[0m     data [38;5;241m=[39m [43mdata[49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m[43m)[49m
[1;32m    362[0m [38;5;28;01mreturn[39;00m data

File [0;32m~/projects/intake-erddap/intake_erddap/erddap.py:205[0m, in [0;36mTableDAPSource.read[0;34m(self)[0m
[1;32m    203[0m [38;5;28;01mdef[39;00m [38;5;21mread[39m([38;5;28mself[39m) [38;5;241m-[39m[38;5;241m>[39m pd[38;5;241m.[39mDataFrame:
[1;32m    204[0m [38;5;250m    [39m[38;5;124;03m"""Return the dataframe from ERDDAP"""[39;00m
[0;32m--> 205[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_partition[49m[43m([49m[43m)[49m

File [0;32m~/projects/intake-erddap/intake_erddap/erddap.py:200[0m, in [0;36mTableDAPSource._get_partition[0;34m(self)[0m
[1;32m    198[0m [38;5;28;01mdef[39;00m [38;5;21m_get_partition[39m([38;5;28mself[39m) [38;5;241m-[39m[38;5;241m>[39m pd[38;5;241m.[39mDataFrame:
[1;32m    199[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_dataframe [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 200[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_load_metadata[49m[43m([49m[43m)[49m
[1;32m    201[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_dataframe

File [0;32m~/miniconda3/envs/ciofs/lib/python3.10/site-packages/intake/source/base.py:279[0m, in [0;36mDataSourceBase._load_metadata[0;34m(self)[0m
[1;32m    277[0m [38;5;250m[39m[38;5;124;03m"""load metadata only if needed"""[39;00m
[1;32m    278[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_schema [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 279[0m     [38;5;28mself[39m[38;5;241m.[39m_schema [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_schema[49m[43m([49m[43m)[49m
[1;32m    280[0m     [38;5;28mself[39m[38;5;241m.[39mdtype [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_schema[38;5;241m.[39mdtype
[1;32m    281[0m     [38;5;28mself[39m[38;5;241m.[39mshape [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_schema[38;5;241m.[39mshape

File [0;32m~/projects/intake-erddap/intake_erddap/erddap.py:186[0m, in [0;36mTableDAPSource._get_schema[0;34m(self)[0m
[1;32m    182[0m [38;5;28;01mdef[39;00m [38;5;21m_get_schema[39m([38;5;28mself[39m) [38;5;241m-[39m[38;5;241m>[39m base[38;5;241m.[39mSchema:
[1;32m    183[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_dataframe [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    184[0m         [38;5;66;03m# TODO: could do partial read with chunksize to get likely schema from[39;00m
[1;32m    185[0m         [38;5;66;03m# first few records, rather than loading the whole thing[39;00m
[0;32m--> 186[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_load[49m[43m([49m[43m)[49m
[1;32m    187[0m         [38;5;28mself[39m[38;5;241m.[39m_dataset_metadata [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_dataset_metadata()
[1;32m    188[0m     [38;5;66;03m# make type checker happy[39;00m

File [0;32m~/projects/intake-erddap/intake_erddap/erddap.py:212[0m, in [0;36mTableDAPSource._load[0;34m(self)[0m
[1;32m    210[0m [38;5;28;01mdef[39;00m [38;5;21m_load[39m([38;5;28mself[39m):
[1;32m    211[0m     e [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_client()
[0;32m--> 212[0m     [38;5;28mself[39m[38;5;241m.[39m_dataframe: pd[38;5;241m.[39mDataFrame [38;5;241m=[39m [43me[49m[38;5;241;43m.[39;49m[43mto_pandas[49m[43m([49m[43mrequests_kwargs[49m[38;5;241;43m=[39;49m[43m{[49m[38;5;124;43m"[39;49m[38;5;124;43mtimeout[39;49m[38;5;124;43m"[39;49m[43m:[49m[43m [49m[38;5;241;43m60[39;49m[43m}[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mopen_kwargs[49m[43m)[49m
[1;32m    213[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_mask_failed_qartod:
[1;32m    214[0m         [38;5;28mself[39m[38;5;241m.[39mrun_mask_failed_qartod()

File [0;32m~/miniconda3/envs/ciofs/lib/python3.10/site-packages/erddapy/erddapy.py:350[0m, in [0;36mERDDAP.to_pandas[0;34m(self, **kw)[0m
[1;32m    348[0m response [38;5;241m=[39m kw[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124mresponse[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mcsvp[39m[38;5;124m"[39m)
[1;32m    349[0m url [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_download_url(response[38;5;241m=[39mresponse, [38;5;241m*[39m[38;5;241m*[39mkw)
[0;32m--> 350[0m [38;5;28;01mreturn[39;00m [43mto_pandas[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mpandas_kwargs[49m[38;5;241;43m=[39;49m[38;5;28;43mdict[39;49m[43m([49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkw[49m[43m)[49m[43m)[49m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.10/site-packages/erddapy/core/interfaces.py:35[0m, in [0;36mto_pandas[0;34m(url, requests_kwargs, pandas_kwargs)[0m
[1;32m     33[0m     [38;5;28;01mreturn[39;00m pd[38;5;241m.[39mread_csv(data, [38;5;241m*[39m[38;5;241m*[39m(pandas_kwargs [38;5;129;01mor[39;00m {}))
[1;32m     34[0m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m e:
[0;32m---> 35[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mCould not read url [39m[38;5;132;01m{[39;00murl[38;5;132;01m}[39;00m[38;5;124m with Pandas.read_csv.[39m[38;5;124m"[39m) [38;5;28;01mfrom[39;00m [38;5;21;01me[39;00m

[0;31mValueError[0m: Could not read url https://erddap.sensors.ioos.us/erddap/tabledap/kodiak-burke-o-lator-kodiak-ak.csv?time,longitude,latitude,z,sea_water_temperature,sea_water_temperature_qc_agg,sea_water_practical_salinity,sea_water_practical_salinity_qc_agg&time>=915148800.0 with Pandas.read_csv.
ValueError: Could not read url https://erddap.sensors.ioos.us/erddap/tabledap/kodiak-burke-o-lator-kodiak-ak.csv?time,longitude,latitude,z,sea_water_temperature,sea_water_temperature_qc_agg,sea_water_practical_salinity,sea_water_practical_salinity_qc_agg&time>=915148800.0 with Pandas.read_csv.

