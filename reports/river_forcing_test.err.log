Traceback (most recent call last):
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/asyncio/base_events.py", line 650, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/contextlib.py", line 222, in __aexit__
    await self.gen.athrow(typ, value, traceback)
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/nbclient/client.py", line 608, in async_setup_kernel
    yield
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/kthyng/miniconda3/envs/ciofs/lib/python3.11/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------


# start_overall, end_overall = "1998-1-1T00:00", "1998-12-31T23:00"
year = 1998
for i in range(1,2):
    if i == 12:
        start, end = f"{year}-{i}-1T00", f"{year+1}-{1}-1T00"
    else:
        start, end = f"{year}-{i}-1T00", f"{year}-{i+1}-1T00"

    ds, fname = create_river_forcing_file(start, end, ndays=8, skip_last=True)
    ds.to_netcdf(fname)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyboardInterrupt[0m                         Traceback (most recent call last)
Cell [0;32mIn[16], line 9[0m
[1;32m      6[0m [38;5;28;01melse[39;00m:
[1;32m      7[0m     start, end [38;5;241m=[39m [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00myear[38;5;132;01m}[39;00m[38;5;124m-[39m[38;5;132;01m{[39;00mi[38;5;132;01m}[39;00m[38;5;124m-1T00[39m[38;5;124m"[39m, [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00myear[38;5;132;01m}[39;00m[38;5;124m-[39m[38;5;132;01m{[39;00mi[38;5;241m+[39m[38;5;241m1[39m[38;5;132;01m}[39;00m[38;5;124m-1T00[39m[38;5;124m"[39m
[0;32m----> 9[0m ds, fname [38;5;241m=[39m [43mcreate_river_forcing_file[49m[43m([49m[43mstart[49m[43m,[49m[43m [49m[43mend[49m[43m,[49m[43m [49m[43mndays[49m[38;5;241;43m=[39;49m[38;5;241;43m8[39;49m[43m,[49m[43m [49m[43mskip_last[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m
[1;32m     10[0m ds[38;5;241m.[39mto_netcdf(fname)

Cell [0;32mIn[15], line 16[0m, in [0;36mcreate_river_forcing_file[0;34m(start, end, ndays, window, skip_last)[0m
[1;32m     14[0m     station_discharge[station] [38;5;241m=[39m find_discharge(station, start, end, ndays, window[38;5;241m=[39mwindow)
[1;32m     15[0m [38;5;28;01mfor[39;00m station [38;5;129;01min[39;00m temp_stations[38;5;241m.[39mvalues():
[0;32m---> 16[0m     station_temp[station] [38;5;241m=[39m [43mfind_temp[49m[43m([49m[43mstation[49m[43m,[49m[43m [49m[43mstart[49m[43m,[49m[43m [49m[43mend[49m[43m,[49m[43m [49m[43mndays[49m[43m,[49m[43m [49m[43mwindow[49m[38;5;241;43m=[39;49m[43mwindow[49m[43m)[49m
[1;32m     18[0m river_transport [38;5;241m=[39m np[38;5;241m.[39mzeros((ntimes, nrivers))
[1;32m     19[0m river_temp [38;5;241m=[39m np[38;5;241m.[39mzeros((ntimes, nsrho, nrivers))

Cell [0;32mIn[14], line 34[0m, in [0;36mfind_temp[0;34m(station, start, end, ndays, window)[0m
[1;32m     30[0m     [38;5;28mprint[39m([38;5;124m"[39m[38;5;124mTemp dataset is empty. Use mean time series.[39m[38;5;124m"[39m)
[1;32m     31[0m     [38;5;66;03m# print(f"Using stats for station {station}")[39;00m
[1;32m     32[0m     [38;5;66;03m# if data is not available at all (outside window of availability) use annual mean[39;00m
[1;32m     33[0m     [38;5;66;03m# Retrieve the statistics[39;00m
[0;32m---> 34[0m     temps [38;5;241m=[39m [43mfind_mean_time_series[49m[43m([49m[43mstation[49m[43m,[49m[43m [49m[43mstart[49m[43m,[49m[43m [49m[43mend[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43m00010[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m     35[0m     [38;5;66;03m# stats = nwis.get_stats(sites=station, parameterCd="00010", statReportType="daily", statTypeCd="mean")[0][39;00m
[1;32m     36[0m     [38;5;66;03m# temps = repeat_years_return_range(stats["mean_va"].values, start, end)[39;00m
[1;32m     37[0m     
[1;32m     38[0m [38;5;28;01melse[39;00m:
[1;32m     39[0m 
[1;32m     40[0m     [38;5;66;03m# this will hold the final combined time series[39;00m
[1;32m     41[0m     temps [38;5;241m=[39m data[[38;5;124m"[39m[38;5;124m00010[39m[38;5;124m"[39m][38;5;241m.[39mcopy()

Cell [0;32mIn[8], line 22[0m, in [0;36mfind_mean_time_series[0;34m(station, start, end, parameter)[0m
[1;32m     19[0m [38;5;66;03m# if data is not available at all (outside window of availability) use annual mean[39;00m
[1;32m     20[0m [38;5;66;03m# Retrieve the statistics[39;00m
[1;32m     21[0m stats [38;5;241m=[39m nwis[38;5;241m.[39mget_stats(sites[38;5;241m=[39mstation, parameterCd[38;5;241m=[39mparameter, statReportType[38;5;241m=[39m[38;5;124m"[39m[38;5;124mdaily[39m[38;5;124m"[39m, statTypeCd[38;5;241m=[39m[38;5;124m"[39m[38;5;124mmean[39m[38;5;124m"[39m)[[38;5;241m0[39m]
[0;32m---> 22[0m discharge [38;5;241m=[39m [43mrepeat_years_return_range[49m[43m([49m[43mstats[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mmean_va[39;49m[38;5;124;43m"[39;49m[43m][49m[38;5;241;43m.[39;49m[43mvalues[49m[43m,[49m[43m [49m[43mstart[49m[43m,[49m[43m [49m[43mend[49m[43m)[49m
[1;32m     23[0m [38;5;28;01mreturn[39;00m discharge

Cell [0;32mIn[3], line 44[0m, in [0;36mrepeat_years_return_range[0;34m(values, start, end)[0m
[1;32m     42[0m stats_repeated [38;5;241m=[39m pd[38;5;241m.[39mconcat(dfs, axis[38;5;241m=[39m[38;5;241m0[39m)
[1;32m     43[0m [38;5;66;03m# import pdb; pdb.set_trace()[39;00m
[0;32m---> 44[0m temps [38;5;241m=[39m [43mstats_repeated[49m[38;5;241;43m.[39;49m[43mresample[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43m15T[39;49m[38;5;124;43m"[39;49m[43m)[49m[38;5;241;43m.[39;49m[43minterpolate[49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mloc[49m[43m[[49m[43mstart[49m[38;5;241;43m.[39;49m[43mreplace[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mZ[39;49m[38;5;124;43m"[39;49m[43m,[49m[38;5;124;43m"[39;49m[38;5;124;43m"[39;49m[43m)[49m[43m:[49m[43mend[49m[38;5;241;43m.[39;49m[43mreplace[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mZ[39;49m[38;5;124;43m"[39;49m[43m,[49m[38;5;124;43m"[39;49m[38;5;124;43m"[39;49m[43m)[49m[43m][49m
[1;32m     46[0m [38;5;28;01mreturn[39;00m temps

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/pandas/core/indexing.py:1073[0m, in [0;36m_LocationIndexer.__getitem__[0;34m(self, key)[0m
[1;32m   1070[0m axis [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39maxis [38;5;129;01mor[39;00m [38;5;241m0[39m
[1;32m   1072[0m maybe_callable [38;5;241m=[39m com[38;5;241m.[39mapply_if_callable(key, [38;5;28mself[39m[38;5;241m.[39mobj)
[0;32m-> 1073[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_getitem_axis[49m[43m([49m[43mmaybe_callable[49m[43m,[49m[43m [49m[43maxis[49m[38;5;241;43m=[39;49m[43maxis[49m[43m)[49m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/pandas/core/indexing.py:1290[0m, in [0;36m_LocIndexer._getitem_axis[0;34m(self, key, axis)[0m
[1;32m   1288[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(key, [38;5;28mslice[39m):
[1;32m   1289[0m     [38;5;28mself[39m[38;5;241m.[39m_validate_key(key, axis)
[0;32m-> 1290[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_slice_axis[49m[43m([49m[43mkey[49m[43m,[49m[43m [49m[43maxis[49m[38;5;241;43m=[39;49m[43maxis[49m[43m)[49m
[1;32m   1291[0m [38;5;28;01melif[39;00m com[38;5;241m.[39mis_bool_indexer(key):
[1;32m   1292[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_getbool_axis(key, axis[38;5;241m=[39maxis)

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/pandas/core/indexing.py:1324[0m, in [0;36m_LocIndexer._get_slice_axis[0;34m(self, slice_obj, axis)[0m
[1;32m   1321[0m     [38;5;28;01mreturn[39;00m obj[38;5;241m.[39mcopy(deep[38;5;241m=[39m[38;5;28;01mFalse[39;00m)
[1;32m   1323[0m labels [38;5;241m=[39m obj[38;5;241m.[39m_get_axis(axis)
[0;32m-> 1324[0m indexer [38;5;241m=[39m [43mlabels[49m[38;5;241;43m.[39;49m[43mslice_indexer[49m[43m([49m[43mslice_obj[49m[38;5;241;43m.[39;49m[43mstart[49m[43m,[49m[43m [49m[43mslice_obj[49m[38;5;241;43m.[39;49m[43mstop[49m[43m,[49m[43m [49m[43mslice_obj[49m[38;5;241;43m.[39;49m[43mstep[49m[43m)[49m
[1;32m   1326[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(indexer, [38;5;28mslice[39m):
[1;32m   1327[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mobj[38;5;241m.[39m_slice(indexer, axis[38;5;241m=[39maxis)

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/pandas/core/indexes/datetimes.py:809[0m, in [0;36mDatetimeIndex.slice_indexer[0;34m(self, start, end, step, kind)[0m
[1;32m    801[0m [38;5;66;03m# GH#33146 if start and end are combinations of str and None and Index is not[39;00m
[1;32m    802[0m [38;5;66;03m# monotonic, we can not use Index.slice_indexer because it does not honor the[39;00m
[1;32m    803[0m [38;5;66;03m# actual elements, is only searching for start and end[39;00m
[1;32m    804[0m [38;5;28;01mif[39;00m (
[1;32m    805[0m     check_str_or_none(start)
[1;32m    806[0m     [38;5;129;01mor[39;00m check_str_or_none(end)
[1;32m    807[0m     [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39mis_monotonic_increasing
[1;32m    808[0m ):
[0;32m--> 809[0m     [38;5;28;01mreturn[39;00m [43mIndex[49m[38;5;241;43m.[39;49m[43mslice_indexer[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mstart[49m[43m,[49m[43m [49m[43mend[49m[43m,[49m[43m [49m[43mstep[49m[43m,[49m[43m [49m[43mkind[49m[38;5;241;43m=[39;49m[43mkind[49m[43m)[49m
[1;32m    811[0m mask [38;5;241m=[39m np[38;5;241m.[39marray([38;5;28;01mTrue[39;00m)
[1;32m    812[0m deprecation_mask [38;5;241m=[39m np[38;5;241m.[39marray([38;5;28;01mTrue[39;00m)

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/pandas/core/indexes/base.py:6559[0m, in [0;36mIndex.slice_indexer[0;34m(self, start, end, step, kind)[0m
[1;32m   6516[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m   6517[0m [38;5;124;03mCompute the slice indexer for input labels and step.[39;00m
[1;32m   6518[0m 
[0;32m   (...)[0m
[1;32m   6555[0m [38;5;124;03mslice(1, 3, None)[39;00m
[1;32m   6556[0m [38;5;124;03m"""[39;00m
[1;32m   6557[0m [38;5;28mself[39m[38;5;241m.[39m_deprecated_arg(kind, [38;5;124m"[39m[38;5;124mkind[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mslice_indexer[39m[38;5;124m"[39m)
[0;32m-> 6559[0m start_slice, end_slice [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mslice_locs[49m[43m([49m[43mstart[49m[43m,[49m[43m [49m[43mend[49m[43m,[49m[43m [49m[43mstep[49m[38;5;241;43m=[39;49m[43mstep[49m[43m)[49m
[1;32m   6561[0m [38;5;66;03m# return a slice[39;00m
[1;32m   6562[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m is_scalar(start_slice):

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/pandas/core/indexes/base.py:6773[0m, in [0;36mIndex.slice_locs[0;34m(self, start, end, step, kind)[0m
[1;32m   6771[0m end_slice [38;5;241m=[39m [38;5;28;01mNone[39;00m
[1;32m   6772[0m [38;5;28;01mif[39;00m end [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m-> 6773[0m     end_slice [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mget_slice_bound[49m[43m([49m[43mend[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mright[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m   6774[0m [38;5;28;01mif[39;00m end_slice [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m   6775[0m     end_slice [38;5;241m=[39m [38;5;28mlen[39m([38;5;28mself[39m)

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/pandas/core/indexes/base.py:6676[0m, in [0;36mIndex.get_slice_bound[0;34m(self, label, side, kind)[0m
[1;32m   6672[0m original_label [38;5;241m=[39m label
[1;32m   6674[0m [38;5;66;03m# For datetime indices label may be a string that has to be converted[39;00m
[1;32m   6675[0m [38;5;66;03m# to datetime boundary according to its resolution.[39;00m
[0;32m-> 6676[0m label [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_maybe_cast_slice_bound[49m[43m([49m[43mlabel[49m[43m,[49m[43m [49m[43mside[49m[43m)[49m
[1;32m   6678[0m [38;5;66;03m# we need to look up the label[39;00m
[1;32m   6679[0m [38;5;28;01mtry[39;00m:

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/pandas/core/indexes/datetimes.py:767[0m, in [0;36mDatetimeIndex._maybe_cast_slice_bound[0;34m(self, label, side, kind)[0m
[1;32m    762[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(label, date) [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(label, datetime):
[1;32m    763[0m     [38;5;66;03m# Pandas supports slicing with dates, treated as datetimes at midnight.[39;00m
[1;32m    764[0m     [38;5;66;03m# https://github.com/pandas-dev/pandas/issues/31501[39;00m
[1;32m    765[0m     label [38;5;241m=[39m Timestamp(label)[38;5;241m.[39mto_pydatetime()
[0;32m--> 767[0m label [38;5;241m=[39m [38;5;28;43msuper[39;49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43m_maybe_cast_slice_bound[49m[43m([49m[43mlabel[49m[43m,[49m[43m [49m[43mside[49m[43m,[49m[43m [49m[43mkind[49m[38;5;241;43m=[39;49m[43mkind[49m[43m)[49m
[1;32m    768[0m [38;5;28mself[39m[38;5;241m.[39m_deprecate_mismatched_indexing(label)
[1;32m    769[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_maybe_cast_for_get_loc(label)

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/pandas/core/indexes/datetimelike.py:317[0m, in [0;36mDatetimeIndexOpsMixin._maybe_cast_slice_bound[0;34m(self, label, side, kind)[0m
[1;32m    311[0m     [38;5;28;01mexcept[39;00m [38;5;167;01mValueError[39;00m [38;5;28;01mas[39;00m err:
[1;32m    312[0m         [38;5;66;03m# DTI -> parsing.DateParseError[39;00m
[1;32m    313[0m         [38;5;66;03m# TDI -> 'unit abbreviation w/o a number'[39;00m
[1;32m    314[0m         [38;5;66;03m# PI -> string cannot be parsed as datetime-like[39;00m
[1;32m    315[0m         [38;5;28;01mraise[39;00m [38;5;28mself[39m[38;5;241m.[39m_invalid_indexer([38;5;124m"[39m[38;5;124mslice[39m[38;5;124m"[39m, label) [38;5;28;01mfrom[39;00m [38;5;21;01merr[39;00m
[0;32m--> 317[0m     lower, upper [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parsed_string_to_bounds[49m[43m([49m[43mreso[49m[43m,[49m[43m [49m[43mparsed[49m[43m)[49m
[1;32m    318[0m     [38;5;28;01mreturn[39;00m lower [38;5;28;01mif[39;00m side [38;5;241m==[39m [38;5;124m"[39m[38;5;124mleft[39m[38;5;124m"[39m [38;5;28;01melse[39;00m upper
[1;32m    319[0m [38;5;28;01melif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(label, [38;5;28mself[39m[38;5;241m.[39m_data[38;5;241m.[39m_recognized_scalars):

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/pandas/core/indexes/datetimes.py:636[0m, in [0;36mDatetimeIndex._parsed_string_to_bounds[0;34m(self, reso, parsed)[0m
[1;32m    621[0m [38;5;28;01mdef[39;00m [38;5;21m_parsed_string_to_bounds[39m([38;5;28mself[39m, reso: Resolution, parsed: datetime):
[1;32m    622[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[1;32m    623[0m [38;5;124;03m    Calculate datetime bounds for parsed time string and its resolution.[39;00m
[1;32m    624[0m 
[0;32m   (...)[0m
[1;32m    634[0m [38;5;124;03m    lower, upper: pd.Timestamp[39;00m
[1;32m    635[0m [38;5;124;03m    """[39;00m
[0;32m--> 636[0m     per [38;5;241m=[39m [43mPeriod[49m[43m([49m[43mparsed[49m[43m,[49m[43m [49m[43mfreq[49m[38;5;241;43m=[39;49m[43mreso[49m[38;5;241;43m.[39;49m[43mattr_abbrev[49m[43m)[49m
[1;32m    637[0m     start, end [38;5;241m=[39m per[38;5;241m.[39mstart_time, per[38;5;241m.[39mend_time
[1;32m    639[0m     [38;5;66;03m# GH 24076[39;00m
[1;32m    640[0m     [38;5;66;03m# If an incoming date string contained a UTC offset, need to localize[39;00m
[1;32m    641[0m     [38;5;66;03m# the parsed date to this offset first before aligning with the index's[39;00m
[1;32m    642[0m     [38;5;66;03m# timezone[39;00m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/pandas/_libs/tslibs/period.pyx:2526[0m, in [0;36mpandas._libs.tslibs.period.Period.__new__[0;34m()[0m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/pandas/_libs/tslibs/period.pyx:1640[0m, in [0;36mpandas._libs.tslibs.period._Period._maybe_convert_freq[0;34m()[0m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/pandas/_libs/tslibs/offsets.pyx:3972[0m, in [0;36mpandas._libs.tslibs.offsets.to_offset[0;34m()[0m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/pandas/_libs/tslibs/offsets.pyx:1069[0m, in [0;36mpandas._libs.tslibs.offsets.Tick.__mul__[0;34m()[0m

File [0;32m<__array_function__ internals>:200[0m, in [0;36misclose[0;34m(*args, **kwargs)[0m

File [0;32m~/miniconda3/envs/ciofs/lib/python3.11/site-packages/numpy/core/numeric.py:2363[0m, in [0;36misclose[0;34m(a, b, rtol, atol, equal_nan)[0m
[1;32m   2360[0m     [38;5;28;01mwith[39;00m errstate(invalid[38;5;241m=[39m[38;5;124m'[39m[38;5;124mignore[39m[38;5;124m'[39m), _no_nep50_warning():
[1;32m   2361[0m         [38;5;28;01mreturn[39;00m less_equal([38;5;28mabs[39m(x[38;5;241m-[39my), atol [38;5;241m+[39m rtol [38;5;241m*[39m [38;5;28mabs[39m(y))
[0;32m-> 2363[0m x [38;5;241m=[39m asanyarray(a)
[1;32m   2364[0m y [38;5;241m=[39m asanyarray(b)
[1;32m   2366[0m [38;5;66;03m# Make sure y is an inexact type to avoid bad behavior on abs(MIN_INT).[39;00m
[1;32m   2367[0m [38;5;66;03m# This will cause casting of x later. Also, make sure to allow subclasses[39;00m
[1;32m   2368[0m [38;5;66;03m# (e.g., for numpy.ma).[39;00m
[0;32m   (...)[0m
[1;32m   2371[0m [38;5;66;03m#       timedelta works if `atol` is an integer or also a timedelta.[39;00m
[1;32m   2372[0m [38;5;66;03m#       Although, the default tolerances are unlikely to be useful[39;00m

[0;31mKeyboardInterrupt[0m: 
KeyboardInterrupt: 

